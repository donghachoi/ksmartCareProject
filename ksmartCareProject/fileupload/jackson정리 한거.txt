jackson 라이브러리??

jackso은 json의 데이터 구조를 처리해주는 라이브러리입니다.

만약 json으로 데이터 구조를 표현 한다면, 아래와 같습니다.

String JSON = "\"{"+
    "\"name\": \"" + person.getName() + "\","+
    "\"job\": \"" + person.getJob() + "\""+ 
"}\"";


java 는 쌍따오뮤ㅛ를 정말 문자열로 사용하고 싶을때 이스케이프 를 써야한다.

이게 너무 힘들어서 json변환용 클래스를 따로 만들고 그 클래스안에 저장된 멤버변수를 이용하여 json 데이터를 출력하는 클래스 가 gson 또는 simplejson등이 있다.

simplejson 의 예로 위 코딩이 아래와 같이 바뀐다.

JSONObject jsonObject = new JSONObject();
jsonObject.put("name", person.getName());
jsonObject.put("job", person.getJob());
String JSON = jsonObject.toString();

해당 방식은 지금도 많이 쓰입니다.

그렇다면 jackson은 무엇을 더 제공하길래 spring 은 jackson을 더 선호하는 것일까요?

사실 차이는 없다.
jackson도 objectmapper api를 사용하여 여타 gson or simpejson과 같이 객체에 데이터를 셋팅해줘야 하는건 마찬가지다

하지만 특별한점은 spring 프레임워크와 jackson의 관개로 부터 장점이있다.

spring 3.0이후로부터, jackson과 관련된 api를 제공합으로써, jackson 라이브러리를 사용할떄, 자동화 처리가 가능하게 되었따.

jackson의 작동원리

spring 3.0 이후로 컨트롤러의 리턴 방식이 @RequestBody 형식이라면 spring은 messageconverter API를 통해 컨트롤러가 리턴하는 객체를 후킹 할 수 있습니다.

jackson은 json데이터를 출력하기 위한 MappingJacksonHttpMessageConverter api를 제공한다.

만약 우리가 스프링 messageConverter를 위의 MappingJacksonHttpMessageConverter 으로 등록한다면, 컨트롤러가 리턴하는 객체를 다시 뜯어 (자바 리플렉션 사용?)